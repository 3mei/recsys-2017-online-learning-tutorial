{
  "paragraphs": [
    {
      "text": "import org.apache.flink.api.common.functions.{RichFlatMapFunction, RichMapFunction}\r\nimport org.apache.flink.streaming.api.functions.sink.RichSinkFunction\r\nimport org.apache.flink.streaming.api.scala._\r\nimport org.apache.flink.util.Collector\r\n    \r\nimport hu.sztaki.ilab.ps.matrix.factorization.PSOfflineMatrixFactorizationForNaiveGenerator._\r\nimport hu.sztaki.ilab.ps.matrix.factorization._\r\nimport hu.sztaki.ilab.ps.matrix.factorization.Utils.{ItemId, UserId}\r\n\r\nimport scala.collection.mutable",
      "user": "anonymous",
      "dateUpdated": "Jul 28, 2017 1:58:23 PM",
      "config": {
        "enabled": true,
        "results": {},
        "editorMode": "ace/mode/scala",
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        },
        "colWidth": 12.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "import org.apache.flink.api.common.functions.{RichFlatMapFunction, RichMapFunction}\nimport org.apache.flink.streaming.api.functions.sink.RichSinkFunction\nimport org.apache.flink.streaming.api.scala._\nimport org.apache.flink.util.Collector\nimport hu.sztaki.ilab.ps.matrix.factorization.PSOfflineMatrixFactorizationForNaiveGenerator._\nimport hu.sztaki.ilab.ps.matrix.factorization._\nimport hu.sztaki.ilab.ps.matrix.factorization.Utils.{ItemId, UserId}\nimport scala.collection.mutable\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1498218544399_1001600492",
      "id": "20170622-084645_781320986",
      "dateCreated": "Jun 23, 2017 1:49:04 PM",
      "dateStarted": "Jul 28, 2017 1:58:23 PM",
      "dateFinished": "Jul 28, 2017 1:58:29 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val trainDataPath \u003d \"data_session_train\"\nval userVectorFileName \u003d \"userVector.map\"\nval itemVectorFileName \u003d \"itemVector.map\"   ",
      "user": "anonymous",
      "dateUpdated": "Jul 28, 2017 1:58:23 PM",
      "config": {
        "enabled": true,
        "results": {},
        "editorMode": "ace/mode/scala",
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        },
        "colWidth": 12.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "trainDataPath: String \u003d data_session_train\nuserVectorFileName: String \u003d userVector.map\nitemVectorFileName: String \u003d itemVector.map\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1498218544400_1011988713",
      "id": "20170622-083625_311133921",
      "dateCreated": "Jun 23, 2017 1:49:04 PM",
      "dateStarted": "Jul 28, 2017 1:58:23 PM",
      "dateFinished": "Jul 28, 2017 1:58:30 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "senv.setParallelism(4)      ",
      "user": "anonymous",
      "dateUpdated": "Jul 28, 2017 1:58:23 PM",
      "config": {
        "enabled": true,
        "results": {},
        "editorMode": "ace/mode/scala",
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        },
        "colWidth": 12.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1498218544401_1011603964",
      "id": "20170622-084103_214762686",
      "dateCreated": "Jun 23, 2017 1:49:04 PM",
      "dateStarted": "Jul 28, 2017 1:58:29 PM",
      "dateFinished": "Jul 28, 2017 1:58:31 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val data \u003d senv.readTextFile(trainDataPath)\n\nval lastFM \u003d data.map(line \u003d\u003e {\n    val fieldsArray \u003d line.split(\" \")\n    (fieldsArray(1).toInt, fieldsArray(2).toInt, 1.0)})",
      "user": "anonymous",
      "dateUpdated": "Jul 28, 2017 1:58:23 PM",
      "config": {
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        },
        "colWidth": 12.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "data: org.apache.flink.streaming.api.scala.DataStream[String] \u003d org.apache.flink.streaming.api.scala.DataStream@24799413\nlastFM: org.apache.flink.streaming.api.scala.DataStream[(Int, Int, Double)] \u003d org.apache.flink.streaming.api.scala.DataStream@77b5188a\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1498218544403_1012373462",
      "id": "20170622-083948_1402225892",
      "dateCreated": "Jun 23, 2017 1:49:04 PM",
      "dateStarted": "Jul 28, 2017 1:58:30 PM",
      "dateFinished": "Jul 28, 2017 1:58:33 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "psOfflineMF(lastFM,\n          numFactors \u003d 20,\n          learningRate \u003d 0.1,\n          minRange \u003d -0.001,\n          maxRange \u003d 0.001,\n          negativeSampleRate \u003d 9,\n          iterations \u003d 2,\n          pullLimit \u003d 2000,\n          workerParallelism \u003d 4,\n          psParallelism \u003d 4,\n          iterationWaitTime \u003d 20000)\n             .addSink(new RichSinkFunction[Either[(UserId, Vector), (ItemId, Vector)]] {\n\n              val userVectors \u003d new mutable.HashMap[UserId, Array[Double]]\n              val itemVectors \u003d new mutable.HashMap[ItemId, Array[Double]]\n    \n              override def invoke(value: Either[(UserId, Vector), (ItemId, Vector)]): Unit \u003d {\n                value match {\n                  case Left((userId, vec)) \u003d\u003e\n                    userVectors.update(userId, vec)\n                  case Right((itemId, vec)) \u003d\u003e\n                    itemVectors.update(itemId, vec)\n                }\n              }\n    \n              override def close(): Unit \u003d {\n                val modelFile \u003d new java.io.PrintWriter(new java.io.File(\"model\"))\n                 \n                  \n                  \n                  \n                val userVectorFile \u003d new java.io.PrintWriter(new java.io.File(userVectorFileName))\n                for((k,v) \u003c- userVectors){\n                    modelFile.write(\"u;\" + k)\n                  for(value \u003c- v){\n                    userVectorFile.write(k + \";\" + value + \u0027\\n\u0027)\n                    modelFile.write(\";\" + value)\n                  }\n                  modelFile.write(\"\\n\")\n                }\n                userVectorFile.close()\n    \n                val itemVectorFile \u003d new java.io.PrintWriter(new java.io.File(itemVectorFileName))\n                for((k,v) \u003c- itemVectors){\n                    modelFile.write(\"i;\" + k)\n                  for(value \u003c- v){\n                    itemVectorFile.write(k + \";\" + value + \u0027\\n\u0027)\n                    modelFile.write(\";\" + value)\n                  }\n                  modelFile.write(\"\\n\")\n                }\n                itemVectorFile.close()\n                modelFile.close()\n              }\n    \n            }).setParallelism(1)\n         ",
      "user": "anonymous",
      "dateUpdated": "Jul 28, 2017 1:58:59 PM",
      "config": {
        "enabled": true,
        "results": {},
        "editorMode": "ace/mode/scala",
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        },
        "colWidth": 12.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "res17: org.apache.flink.streaming.api.datastream.DataStreamSink[Either[(hu.sztaki.ilab.ps.matrix.factorization.Utils.UserId, hu.sztaki.ilab.ps.matrix.factorization.PSOfflineMatrixFactorizationForNaiveGenerator.Vector),(hu.sztaki.ilab.ps.matrix.factorization.Utils.ItemId, hu.sztaki.ilab.ps.matrix.factorization.PSOfflineMatrixFactorizationForNaiveGenerator.Vector)]] \u003d org.apache.flink.streaming.api.datastream.DataStreamSink@33f669c\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1498218544404_1010449717",
      "id": "20170622-084005_798284100",
      "dateCreated": "Jun 23, 2017 1:49:04 PM",
      "dateStarted": "Jul 28, 2017 1:58:59 PM",
      "dateFinished": "Jul 28, 2017 1:59:01 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "senv.execute()",
      "user": "anonymous",
      "dateUpdated": "Jul 28, 2017 1:59:01 PM",
      "config": {
        "enabled": true,
        "results": {},
        "editorMode": "ace/mode/scala",
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        },
        "colWidth": 12.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "res19: org.apache.flink.api.common.JobExecutionResult \u003d org.apache.flink.api.common.JobExecutionResult@53397d2d\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1498218544405_1010064968",
      "id": "20170622-084509_1135866173",
      "dateCreated": "Jun 23, 2017 1:49:04 PM",
      "dateStarted": "Jul 28, 2017 1:59:01 PM",
      "dateFinished": "Jul 28, 2017 1:59:53 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "user": "anonymous",
      "dateUpdated": "Jul 28, 2017 1:58:23 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1498218544405_1010064968",
      "id": "20170623-111545_417741466",
      "dateCreated": "Jun 23, 2017 1:49:04 PM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "flink_offlineMF",
  "id": "2CMJ53KDR",
  "angularObjects": {
    "2CK72QMC5:shared_process": [],
    "2CKXYZ6CN:shared_process": [],
    "2CMTWB74R:shared_process": [],
    "2CKS4TJTK:shared_process": [],
    "2CMHDPRT3:shared_process": [],
    "2CJZ774GG:shared_process": [],
    "2CJTTF25Z:shared_process": [],
    "2CKM3CRYB:shared_process": [],
    "2CN17ZKCE:shared_process": [],
    "2CNBPAE22:shared_process": [],
    "2CKHHD5Y3:shared_process": [],
    "2CPGBTGZR:shared_process": [],
    "2CMMTM4MK:shared_process": [],
    "2CMASUG7B:shared_process": [],
    "2CKKGRVGB:shared_process": [],
    "2CNNQKFTP:shared_process": [],
    "2CMK1BN3B:shared_process": [],
    "2CPQCC3MT:shared_process": [],
    "2CKFWAW5R:shared_process": []
  },
  "config": {},
  "info": {}
}