{
  "paragraphs": [
    {
      "text": "import org.apache.flink.api.common.functions.{RichFlatMapFunction, RichMapFunction}\r\nimport org.apache.flink.streaming.api.functions.sink.RichSinkFunction\r\nimport org.apache.flink.streaming.api.scala._\r\nimport org.apache.flink.util.Collector\r\n    \r\nimport hu.sztaki.ilab.ps.matrix.factorization.PSOfflineMatrixFactorization._\r\nimport hu.sztaki.ilab.ps.matrix.factorization._\r\nimport hu.sztaki.ilab.ps.matrix.factorization.Utils.{ItemId, UserId}\r\n\r\nimport scala.collection.mutable",
      "user": "anonymous",
      "dateUpdated": "Aug 8, 2017 4:22:14 PM",
      "config": {
        "editorMode": "ace/mode/scala",
        "colWidth": 12.0,
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "import org.apache.flink.api.common.functions.{RichFlatMapFunction, RichMapFunction}\nimport org.apache.flink.streaming.api.functions.sink.RichSinkFunction\nimport org.apache.flink.streaming.api.scala._\nimport org.apache.flink.util.Collector\nimport hu.sztaki.ilab.ps.matrix.factorization.PSOfflineMatrixFactorization._\nimport hu.sztaki.ilab.ps.matrix.factorization._\nimport hu.sztaki.ilab.ps.matrix.factorization.Utils.{ItemId, UserId}\nimport scala.collection.mutable\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1501666353779_1863300828",
      "id": "20170622-084645_781320986",
      "dateCreated": "Aug 2, 2017 11:32:33 AM",
      "dateStarted": "Aug 8, 2017 4:22:14 PM",
      "dateFinished": "Aug 8, 2017 4:22:17 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val trainDataPath \u003d \"data_session_train\"\nval userVectorFileName \u003d \"userVector.map\"\nval itemVectorFileName \u003d \"itemVector.map\"   ",
      "user": "anonymous",
      "dateUpdated": "Aug 8, 2017 4:22:16 PM",
      "config": {
        "editorMode": "ace/mode/scala",
        "colWidth": 12.0,
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "trainDataPath: String \u003d data_session_train\nuserVectorFileName: String \u003d userVector.map\nitemVectorFileName: String \u003d itemVector.map\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1501666353788_1858299092",
      "id": "20170622-083625_311133921",
      "dateCreated": "Aug 2, 2017 11:32:33 AM",
      "dateStarted": "Aug 8, 2017 4:22:16 PM",
      "dateFinished": "Aug 8, 2017 4:22:19 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "senv.setParallelism(4)      ",
      "user": "anonymous",
      "dateUpdated": "Aug 8, 2017 4:22:18 PM",
      "config": {
        "editorMode": "ace/mode/scala",
        "colWidth": 12.0,
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1501666353789_1857914343",
      "id": "20170622-084103_214762686",
      "dateCreated": "Aug 2, 2017 11:32:33 AM",
      "dateStarted": "Aug 8, 2017 4:22:18 PM",
      "dateFinished": "Aug 8, 2017 4:22:19 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val data \u003d senv.readTextFile(trainDataPath)\n\nval lastFM \u003d data.map(line \u003d\u003e {\n    val fieldsArray \u003d line.split(\" \")\n    (fieldsArray(1).toInt, fieldsArray(2).toInt, 1.0)})",
      "user": "anonymous",
      "dateUpdated": "Aug 8, 2017 4:22:21 PM",
      "config": {
        "editorMode": "ace/mode/scala",
        "colWidth": 12.0,
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "data: org.apache.flink.streaming.api.scala.DataStream[String] \u003d org.apache.flink.streaming.api.scala.DataStream@30aff348\nlastFM: org.apache.flink.streaming.api.scala.DataStream[(Int, Int, Double)] \u003d org.apache.flink.streaming.api.scala.DataStream@1bdecd92\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1501666353790_1859068590",
      "id": "20170622-083948_1402225892",
      "dateCreated": "Aug 2, 2017 11:32:33 AM",
      "dateStarted": "Aug 8, 2017 4:22:21 PM",
      "dateFinished": "Aug 8, 2017 4:22:24 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "    psOfflineMF(lastFM,\n          numFactors \u003d 20,\n          learningRate \u003d 0.1,\n          minRange \u003d -0.001,\n          maxRange \u003d 0.001,\n          negativeSampleRate \u003d 9,\n          iterations \u003d 2,\n          pullLimit \u003d 2000,\n          workerParallelism \u003d 4,\n          psParallelism \u003d 4,\n          iterationWaitTime \u003d 20000)\n             .addSink(new RichSinkFunction[Either[(UserId, Vector), (ItemId, Vector)]] {\n\n              val userVectors \u003d new mutable.HashMap[UserId, Array[Double]]\n              val itemVectors \u003d new mutable.HashMap[ItemId, Array[Double]]\n    \n              override def invoke(value: Either[(UserId, Vector), (ItemId, Vector)]): Unit \u003d {\n                value match {\n                  case Left((userId, vec)) \u003d\u003e\n                    userVectors.update(userId, vec)\n                  case Right((itemId, vec)) \u003d\u003e\n                    itemVectors.update(itemId, vec)\n                }\n              }\n    \n              override def close(): Unit \u003d {\n                val modelFile \u003d new java.io.PrintWriter(new java.io.File(\"model\"))\n                val userVectorFile \u003d new java.io.PrintWriter(new java.io.File(userVectorFileName))\n                \n                for((k,v) \u003c- userVectors){\n                    modelFile.write(\"u;\" + k)\n                  for(value \u003c- v){\n                    userVectorFile.write(k + \";\" + value + \u0027\\n\u0027)\n                    modelFile.write(\";\" + value)\n                  }\n                  modelFile.write(\"\\n\")\n                }\n                userVectorFile.close()\n    \n                val itemVectorFile \u003d new java.io.PrintWriter(new java.io.File(itemVectorFileName))\n                for((k,v) \u003c- itemVectors){\n                    modelFile.write(\"i;\" + k)\n                  for(value \u003c- v){\n                    itemVectorFile.write(k + \";\" + value + \u0027\\n\u0027)\n                    modelFile.write(\";\" + value)\n                  }\n                  modelFile.write(\"\\n\")\n                }\n                itemVectorFile.close()\n                modelFile.close()\n              }\n    \n            }).setParallelism(1)\n         ",
      "user": "anonymous",
      "dateUpdated": "Aug 8, 2017 4:22:29 PM",
      "config": {
        "editorMode": "ace/mode/scala",
        "colWidth": 12.0,
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "ERROR",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u003cconsole\u003e:108: error: too many arguments for method psOfflineMF: (src: org.apache.flink.streaming.api.scala.DataStream[hu.sztaki.ilab.ps.matrix.factorization.PSOfflineMatrixFactorization.Rating], numFactors: Int, learningRate: Double, minRange: Double, maxRange: Double, iterations: Int, pullLimit: Int, workerParallelism: Int, psParallelism: Int, iterationWaitTime: Long)org.apache.flink.streaming.api.scala.DataStream[Either[(hu.sztaki.ilab.ps.matrix.factorization.Utils.UserId, hu.sztaki.ilab.ps.matrix.factorization.PSOfflineMatrixFactorization.Vector),(hu.sztaki.ilab.ps.matrix.factorization.Utils.ItemId, hu.sztaki.ilab.ps.matrix.factorization.PSOfflineMatrixFactorization.Vector)]]\n           psOfflineMF(lastFM,\n                      ^\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1501666353791_1858683841",
      "id": "20170622-084005_798284100",
      "dateCreated": "Aug 2, 2017 11:32:33 AM",
      "dateStarted": "Aug 8, 2017 4:22:29 PM",
      "dateFinished": "Aug 8, 2017 4:22:30 PM",
      "status": "ERROR",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "senv.execute()",
      "user": "anonymous",
      "dateUpdated": "Aug 8, 2017 3:56:57 PM",
      "config": {
        "editorMode": "ace/mode/scala",
        "colWidth": 12.0,
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "res6: org.apache.flink.api.common.JobExecutionResult \u003d org.apache.flink.api.common.JobExecutionResult@47e26993\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1501666353792_1942943850",
      "id": "20170622-084509_1135866173",
      "dateCreated": "Aug 2, 2017 11:32:33 AM",
      "dateStarted": "Aug 8, 2017 3:57:14 PM",
      "dateFinished": "Aug 8, 2017 3:57:19 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "dateUpdated": "Aug 2, 2017 11:32:33 AM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1501666353801_1939481110",
      "id": "20170623-111545_417741466",
      "dateCreated": "Aug 2, 2017 11:32:33 AM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "flink_offlineMF",
  "id": "2CSARW176",
  "angularObjects": {
    "2CQEV1KZW:shared_process": [],
    "2CRKCK1NF:shared_process": [],
    "2CRF8AWSP:shared_process": [],
    "2CP4WKAT7:shared_process": [],
    "2CPUXQHH6:shared_process": [],
    "2CPA1PCD9:shared_process": [],
    "2CN78HPAV:shared_process": [],
    "2CQ7RBMUN:shared_process": [],
    "2CRH2FK3R:shared_process": [],
    "2CQNSADQH:shared_process": [],
    "2CQRXZD89:shared_process": [],
    "2CRDUPHCE:shared_process": [],
    "2CNABP9UM:shared_process": [],
    "2CPXHZ2CH:shared_process": [],
    "2CRNE8QE4:shared_process": [],
    "2CPJDUB2G:shared_process": [],
    "2CNC49WN4:shared_process": [],
    "2CPW8TH9V:shared_process": [],
    "2CPUQ468Z:shared_process": []
  },
  "config": {},
  "info": {}
}